__author__ = 'sharmrav'
import Ch2_MakingRecommendations.recommendations

# Testing import
print(Ch2_MakingRecommendations.recommendations.critics)
print(Ch2_MakingRecommendations.recommendations.critics['Lisa Rose']['Lady in the water'])
print(Ch2_MakingRecommendations.recommendations.critics['Toby'])
print(Ch2_MakingRecommendations.recommendations.critics['Toby']['Snakes on a Plane'])

from Ch2_MakingRecommendations import recommendations

#Computing SImilarity Scores using Euclidean distance score and / or Pearson Corelation score
print('----------------EUCLIDEAN DISTANCE-----------------------------')
print('SImilarity between lisa and gene is ')
print(recommendations.sim_distance(recommendations.critics,'Lisa Rose','Gene Seymour'))
print('SImilarity between lisa and Michael is ')
print(recommendations.sim_distance(recommendations.critics,'Lisa Rose','Michael Phillips'))
print('SImilarity between lisa and Claudia is ')
print(recommendations.sim_distance(recommendations.critics,'Lisa Rose','Claudia Puig'))
print('SImilarity between lisa and Mick is ')
print(recommendations.sim_distance(recommendations.critics,'Lisa Rose','Mick Lasalle'))
print('SImilarity between lisa and jack is ')
print(recommendations.sim_distance(recommendations.critics,'Lisa Rose','Jack Matthews'))
print('SImilarity between lisa and Toby is ')
print(recommendations.sim_distance(recommendations.critics,'Lisa Rose','Toby'))
print('SImilarity between gene and Micheal is ')
print(recommendations.sim_distance(recommendations.critics,'Gene Seymour','Michael Phillips'))
print('SImilarity between gene and Claudia is ')
print(recommendations.sim_distance(recommendations.critics,'Gene Seymour','Claudia Puig'))
print('SImilarity between gene and Mick is ')
print(recommendations.sim_distance(recommendations.critics,'Gene Seymour','Mick Lasalle'))
print('SImilarity between gene and Jack is ')
print(recommendations.sim_distance(recommendations.critics,'Gene Seymour','Jack Matthews'))
print('SImilarity between gene and Toby is ')
print(recommendations.sim_distance(recommendations.critics,'Gene Seymour','Toby'))
print('SImilarity between Michael and Claudia is ')
print(recommendations.sim_distance(recommendations.critics,'Michael Phillips','Claudia Puig'))
print('SImilarity between Michael and Mick is ')
print(recommendations.sim_distance(recommendations.critics,'Michael Phillips','Mick Lasalle'))
print('SImilarity between Michael and Jack is ')
print(recommendations.sim_distance(recommendations.critics,'Michael Phillips','Jack Matthews'))
print('SImilarity between Michael and Toby is ')
print(recommendations.sim_distance(recommendations.critics,'Michael Phillips','Toby'))
print('SImilarity between Jack and Toby is ')
print(recommendations.sim_distance(recommendations.critics,'Jack Matthews','Toby'))
print('------------------------------------------------------------------------------')
print('----------------------PEARSON CORELATION---------------------------------------')

print('SImilarity between lisa and gene is ')
print(recommendations.sim_pearson(recommendations.critics,'Lisa Rose','Gene Seymour'))
print('SImilarity between lisa and Michael is ')
print(recommendations.sim_pearson(recommendations.critics,'Lisa Rose','Michael Phillips'))
print('SImilarity between lisa and Claudia is ')
print(recommendations.sim_pearson(recommendations.critics,'Lisa Rose','Claudia Puig'))
print('SImilarity between lisa and Mick is ')
print(recommendations.sim_pearson(recommendations.critics,'Lisa Rose','Mick Lasalle'))
print('SImilarity between lisa and jack is ')
print(recommendations.sim_pearson(recommendations.critics,'Lisa Rose','Jack Matthews'))
print('SImilarity between lisa and Toby is ')
print(recommendations.sim_pearson(recommendations.critics,'Lisa Rose','Toby'))
print('SImilarity between gene and Micheal is ')
print(recommendations.sim_pearson(recommendations.critics,'Gene Seymour','Michael Phillips'))
print('SImilarity between gene and Claudia is ')
print(recommendations.sim_pearson(recommendations.critics,'Gene Seymour','Claudia Puig'))
print('SImilarity between gene and Mick is ')
print(recommendations.sim_pearson(recommendations.critics,'Gene Seymour','Mick Lasalle'))
print('SImilarity between gene and Jack is ')
print(recommendations.sim_pearson(recommendations.critics,'Gene Seymour','Jack Matthews'))
print('SImilarity between gene and Toby is ')
print(recommendations.sim_pearson(recommendations.critics,'Gene Seymour','Toby'))
print('SImilarity between Michael and Claudia is ')
print(recommendations.sim_pearson(recommendations.critics,'Michael Phillips','Claudia Puig'))
print('SImilarity between Michael and Mick is ')
print(recommendations.sim_pearson(recommendations.critics,'Michael Phillips','Mick Lasalle'))
print('SImilarity between Michael and Jack is ')
print(recommendations.sim_pearson(recommendations.critics,'Michael Phillips','Jack Matthews'))
print('SImilarity between Michael and Toby is ')
print(recommendations.sim_pearson(recommendations.critics,'Michael Phillips','Toby'))
print('SImilarity between Jack and Toby is ')
print(recommendations.sim_pearson(recommendations.critics,'Jack Matthews','Toby'))

print('-----------------------------------------------------------------------------------')
print('----------------cClosest match---------------------------------------------------')

print(recommendations.toppMatches(recommendations.critics,'Toby',n=3))